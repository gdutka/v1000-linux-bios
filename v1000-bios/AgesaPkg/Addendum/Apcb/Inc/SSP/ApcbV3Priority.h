/*****************************************************************************
 *
 * Copyright (C) 2016-2022 Advanced Micro Devices, Inc. All rights reserved.
 *
 *******************************************************************************
 */

#ifndef _APCB_V3_PRIORITY_H_
#define _APCB_V3_PRIORITY_H_
//
// @APCB_START
//

//
// @CONSTANT
//
#define APCB_BINARY_INSTANCE_DEFAULT        0
#define APCB_BINARY_INSTANCE_HARD_FORCE     1
#define APCB_BINARY_INSTANCE_BIOS_CONFIG    0
#define APCB_BINARY_INSTANCE_EVENT_LOGGING  1

#define APCB_TYPE_INSTANCE_DEFAULT          0
#define APCB_TYPE_INSTANCE_HARD_FORCE       0
#define APCB_TYPE_INSTANCE_NORMAL           0
#define APCB_TYPE_INSTANCE_DEBUG            1
#define APCB_TYPE_INSTANCE_ADMIN            2
#define APCB_TYPE_INSTANCE_EVENT_LOGGING    0


typedef enum {
  APCB_PRIORITY_LEVEL_NONE            = 0,
  APCB_PRIORITY_LEVEL_HARD_FORCE      = 1,
  APCB_PRIORITY_LEVEL_CUSTOM0         = 2,
  APCB_PRIORITY_LEVEL_CUSTOM1         = 3,
  APCB_PRIORITY_LEVEL_EVENT_LOGGING   = 4,
  APCB_PRIORITY_LEVEL_CUSTOM2         = 5,
  APCB_PRIORITY_LEVEL_DEFAULT         = 6,
  APCB_PRIORITY_LEVEL_LIMIT           = 7,
} APCB_PRIORITY_LEVEL;

typedef enum {
  APCB_TYPE_PURPOSE_NONE              = 0,
  APCB_TYPE_PURPOSE_HARD_FORCE        = 1,
  APCB_TYPE_PURPOSE_ADMIN             = 2,
  APCB_TYPE_PURPOSE_DEBUG             = 3,
  APCB_TYPE_PURPOSE_EVENT_LOGGING     = 4,
  APCB_TYPE_PURPOSE_NORMAL            = 5,
  APCB_TYPE_PURPOSE_DEFAULT           = 6,
  APCB_TYPE_PURPOSE_LIMIT             = 7,
} APCB_TYPE_PURPOSE;


#define APCB_PRIORITY_TYPE_MASK_NONE           0        ///< @VALUE: 0
#define APCB_PRIORITY_TYPE_MASK_HARD_FORCE     (1 << 1) ///< @VALUE: 0x2
#define APCB_PRIORITY_TYPE_MASK_ADMIN          (1 << 2) ///< @VALUE: 0x4
#define APCB_PRIORITY_TYPE_MASK_DEBUG          (1 << 3) ///< @VALUE: 0x8
#define APCB_PRIORITY_TYPE_MASK_EVENT_LOGGING  (1 << 4) ///< @VALUE: 0x10
#define APCB_PRIORITY_TYPE_MASK_NORMAL         (1 << 5) ///< @VALUE: 0x20
#define APCB_PRIORITY_TYPE_MASK_DEFAULT        (1 << 6) ///< @VALUE: 0x40



typedef enum {
  APCB_PRIORITY_MASK_NONE           = APCB_PRIORITY_TYPE_MASK_NONE,
  APCB_PRIORITY_MASK_HARD_FORCE     = APCB_PRIORITY_TYPE_MASK_HARD_FORCE,
  APCB_PRIORITY_MASK_ADMIN          = APCB_PRIORITY_TYPE_MASK_ADMIN,
  APCB_PRIORITY_MASK_DEBUG          = APCB_PRIORITY_TYPE_MASK_DEBUG,
  APCB_PRIORITY_MASK_EVENT_LOGGING  = APCB_PRIORITY_TYPE_MASK_EVENT_LOGGING,
  APCB_PRIORITY_MASK_NORMAL         = APCB_PRIORITY_TYPE_MASK_NORMAL,
  APCB_PRIORITY_MASK_DEFAULT        = APCB_PRIORITY_TYPE_MASK_DEFAULT,
} APCB_PRIORITY_TYPE_MASK;

typedef enum {
  APCB_PRIORITY_ORDER_HARD_FORCE  = 1,   // Non-customizable
  APCB_PRIORITY_ORDER_2           = 2,
  APCB_PRIORTY_ORDER_HIGH         = APCB_PRIORITY_ORDER_2,
  APCB_PRIORITY_ORDER_3           = 3,
  APCB_PRIORTY_ORDER_MEDIUM       = APCB_PRIORITY_ORDER_3,
  APCB_PRIORITY_ORDER_4           = 4,
  APCB_PRIORTY_ORDER_LOW          = APCB_PRIORITY_ORDER_4,
  APCB_PRIORITY_ORDER_5           = 5,
  APCB_PRIORTY_ORDER_LOWEST       = APCB_PRIORITY_ORDER_5,
  APCB_PRIORITY_ORDER_DEFAULT     = 6   // Non-customizable
} APCB_READ_PRIORITY_ORDER;

#if 0 // To be supported
typedef enum {
  APCB_PRIORITY_NONE            = 0,
  APCB_PRIORITY_HARD_FORCE      = 1,
  APCB_PRIORITY_ADMIN           = 2,
  APCB_PRIORITY_DEBUG           = 3,
  APCB_PRIORITY_EVENT_LOGGING   = 4,
  APCB_PRIORITY_NORMAL          = 5,
  APCB_PRIORITY_DEFAULT         = 6,
  APCB_PRIORITY_LIMIT           = 7,
} APCB_PRIORITY_TYPE;
#endif

#endif // _APCB_V3_PRIORITY_H_

