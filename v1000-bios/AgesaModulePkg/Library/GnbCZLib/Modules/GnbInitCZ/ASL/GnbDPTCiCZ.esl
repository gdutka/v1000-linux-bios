/**
 * @file
 *
 * ALIB ASL library
 *
 *
 *
 * @xrefitem bom "File Content Label" "Release Content"
 * @e project:     AGESA
 * @e sub-project: GNB
 * @e \$Revision: 309090 $   @e \$Date: 2014-12-10 02:28:05 +0800 (Wed, 10 Dec 2014) $
 *
 */
/*
*****************************************************************************
*
* Copyright (C) 2008-2022 Advanced Micro Devices, Inc. All rights reserved.
*
* ***************************************************************************
*
*/

  /*----------------------------------------------------------------------------------------*/
  /**
   *  Manage DPTCi
   *
   *
   *  Arg0 - buffer contains Power or thermal parameters
   */
  Method (procDPTCi, 1, Serialized) {
    CreateWordField (Arg0, 0, varSizeOfBuffer)    // Get total size of input buffer

    Store (Buffer (24) {}, Local7)                // Local7 as an input buffer and passed to procGnbSmuServiceReq
    CreateDWordField (Local7, 0,  varSmuArg0)
    CreateDWordField (Local7, 4,  varSmuArg1)
    CreateDWordField (Local7, 8,  varSmuArg2)
    CreateDWordField (Local7, 12, varSmuArg3)
    CreateDWordField (Local7, 16, varSmuArg4)
    CreateDWordField (Local7, 20, varSmuArg5)

    Store (2, Local0)                             // Use Local0 as buffer index
    while (LLess (Local0, varSizeOfBuffer)) {
      Store (DeRefOf (Index (Arg0, Local0)), Local1)
      Increment (Local0)
      Store (DeRefOf (Index (Arg0, Local0)), Local2)
      Increment (Local0)
      Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 8), Local2, Local2)
      Increment (Local0)
      Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 16), Local2, Local2)
      Increment (Local0)
      Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 24), Local2, Local2)
      Increment (Local0)

      Store (0, varSmuArg0)
      Store (0, varSmuArg1)
      Store (0, varSmuArg2)
      Store (0, varSmuArg3)
      Store (0, varSmuArg4)
      Store (0, varSmuArg5)

      if (LEqual (Local1, 0)) {
        Store (Local2, varSmuArg0)
        procGnbSmuServiceReq (0x69, Local7)       // SMC_MSG_LoadCTdpParameters
      }
      if (LEqual (Local1, 1)) {
        Store (Local2, varSmuArg2)
        procGnbSmuServiceReq (0x6C, Local7)       // SMC_MSG_LoadStapmParameters
      }
      if (LEqual (Local1, 2)) {
        Store (Local2, varSmuArg0)
        procGnbSmuServiceReq (0x6C, Local7)       // SMC_MSG_LoadStapmParameters
      }
      if (LEqual (Local1, 3)) {
        Store (Local2, varSmuArg0)
        procGnbSmuServiceReq (0x7C, Local7)       // SMC_MSG_LoadTjMaxParameters
      }
      if (LEqual (Local1, 4)) {
        Store (DeRefOf (Index (Arg0, Local0)), Local3)
        Increment (Local0)
        Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 8), Local3, Local3)
        Increment (Local0)
        Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 16), Local3, Local3)
        Increment (Local0)
        Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 24), Local3, Local3)
        Increment (Local0)
        Store (Local2, varSmuArg0)
        Store (Local3, varSmuArg1)
        procGnbSmuServiceReq (0x6A, Local7)       // SMC_MSG_LoadPkgPowerParameters
      }
    }
  }
